analyzer:
  errors:
    # treat missing required parameters as a warning (not a hint)
    missing_required_param: warning
    # treat missing returns as a warning (not a hint)
    missing_return: warning
    # allow having TODOs in the code
    todo: ignore
# https://dart-lang.github.io/linter/lints/
linter:
  rules:
    - always_declare_return_types # pedantic
    # - always_put_control_body_on_new_line
    # - always_put_required_named_parameters_first
    - always_require_non_null_named_parameters # pedantic
    # - always_specify_types
    # - always_use_package_imports
    - annotate_overrides # pedantic
    # - avoid_annotating_with_dynamic
    # - avoid_as
    # - avoid_bool_literals_in_conditional_expressions
    # - avoid_catches_without_on_clauses # effective_dart
    # - avoid_catching_errors # effective_dart
    # - avoid_classes_with_only_static_members # effective_dart
    # - avoid_double_and_int_checks
    - avoid_empty_else
    # - avoid_equals_and_hash_code_on_mutable_classes # effective_dart
    # - avoid_escaping_inner_quotes
    # - avoid_field_initializers_in_const_classes
    # - avoid_function_literals_in_foreach_calls
    # - avoid_implementing_value_types
    - avoid_init_to_null # flutter, pedantic, effective_dart
    # - avoid_js_rounded_ints
    - avoid_null_checks_in_equality_operators # pedantic, effective_dart
    - avoid_positional_boolean_parameters # effective_dart
    - avoid_print
    - avoid_private_typedef_functions # effective_dart
    # - avoid_redundant_argument_values
    - avoid_relative_lib_imports # pedantic, effective_dart TODO(amond)
    # - avoid_renaming_method_parameters
    - avoid_return_types_on_setters # flutter, pedantic, effective_dart
    # - avoid_returning_null # effective_dart TODO: avoid_returning_null
    # - avoid_returning_null_for_future
    # - avoid_returning_null_for_void
    # - avoid_returning_this # effective_dart TODO: avoid_returning_null
    - avoid_setters_without_getters # effective_dart
    - avoid_shadowing_type_parameters # pedantic
    # - avoid_single_cascade_in_expression_statements
    # - avoid_slow_async_io
    # - avoid_type_to_string
    - avoid_types_as_parameter_names # pedantic
    # - avoid_types_on_closure_parameters # effective_dart TODO: avoid_types_on_closure_parameters
    # - avoid_unnecessary_containers
    # - avoid_unused_constructor_parameters
    # - avoid_void_async
    - avoid_web_libraries_in_flutter # flutter
    - await_only_futures # flutter
    - camel_case_extensions # pedantic, effective_dart
    - camel_case_types # flutter, effective_dart
    - cancel_subscriptions # flutter
    # - cascade_invocations
    - close_sinks # flutter
    # - comment_references
    # - constant_identifier_names # effective_dart
    - control_flow_in_finally # flutter
    - curly_braces_in_flow_control_structures # pedantic, effective_dart
    - diagnostic_describe_all_properties
    - directives_ordering # effective_dart
    # - do_not_use_environment
    - empty_catches # pedantic
    - empty_constructor_bodies # flutter, pedantic, effective_dart
    - empty_statements # flutter
    # - exhaustive_cases
    # - file_names # effective_dart
    - flutter_style_todos
    - hash_and_equals # flutter, effective_dart
    - implementation_imports # flutter, effective_dart
    # - invariant_booleans
    # - iterable_contains_unrelated_type
    # - join_return_with_assignment
    # - leading_newlines_in_multiline_strings
    - library_names # flutter, pedantic, effective_dart
    - library_prefixes # pedantic, effective_dart
    # - lines_longer_than_80_chars # effective_dart
    # - list_remove_unrelated_type
    # - literal_only_boolean_expressions
    # - missing_whitespace_between_adjacent_strings
    # - no_adjacent_strings_in_list
    # - no_default_cases
    - no_duplicate_case_values # pedantic
    # - no_logic_in_create_state
    # - no_runtimeType_toString
    - non_constant_identifier_names # flutter, effective_dart
    - null_closures # pedantic
    - omit_local_variable_types # pedantic, effective_dart
    # - one_member_abstracts # effective_dart
    # - only_throw_errors
    # - overridden_fields
    - package_api_docs # flutter, effective_dart
    - package_names # flutter
    - package_prefixed_library_names #flutter
    # - parameter_assignments
    - prefer_adjacent_string_concatenation # pedantic, effective_dart
    #- prefer_asserts_in_initializer_lists
    #- prefer_asserts_with_message
    - prefer_collection_literals # pedantic, effective_dart
    - prefer_conditional_assignment # pedantic
    # - prefer_const_constructors
    # - prefer_const_constructors_in_immutables
    # - prefer_const_declarations
    # - prefer_const_literals_to_create_immutables
    # - prefer_constructors_over_static_methods
    - prefer_contains # pedantic
    # - prefer_double_quotes
    - prefer_equal_for_default_values # pedantic, effective_dart
    # - prefer_expression_function_bodies
    - prefer_final_fields # pedantic, effective_dart
    # - prefer_final_in_for_each
    # - prefer_final_locals
    - prefer_for_elements_to_map_fromIterable # pedantic
    # - prefer_foreach
    # - prefer_function_declarations_over_variables # effective_dart
    - prefer_generic_function_type_aliases # pedantic, effective_dart
    # - prefer_if_elements_to_conditional_expressions
    - prefer_if_null_operators # pedantic
    # - prefer_initializing_formals
    # - prefer_inlined_adds
    # - prefer_int_literals
    - prefer_interpolation_to_compose_strings # effective_dart
    - prefer_is_empty # pedantic
    - prefer_is_not_empty # flutter, pedantic
    # - prefer_is_not_operator
    - prefer_iterable_whereType # pedantic, effective_dart
    # - prefer_mixin # effective_dart
    # - prefer_null_aware_operators
    - prefer_relative_imports
    - prefer_single_quotes # pedantic
    - prefer_spread_collections # pedantic
    # - prefer_typing_uninitialized_variables
    # - prefer_void_to_null
    - provide_deprecation_message
    # - public_member_api_docs # effective_dart
    - recursive_getters # pedantic
    # - sized_box_for_whitespace
    - slash_for_doc_comments # flutter, pedantic, effective_dart
    # - sort_child_properties_last
    # - sort_constructors_first
    # - sort_pub_dependencies
    # - sort_unnamed_constructors_first
    - test_types_in_equals # flutter
    - throw_in_finally # flutter
    # - type_annotate_public_apis # effective_dart
    - type_init_formals # flutter, pedantic, effective_dart
    - unawaited_futures # pedantic
    # - unnecessary_await_in_return
    - unnecessary_brace_in_string_interps # flutter, effective_dart
    - unnecessary_const # pedantic, effective_dart
    # - unnecessary_final
    - unnecessary_getters_setters # flutter, effective_dart
    # - unnecessary_lambdas # effective_dart
    - unnecessary_new # pedantic, effective_dart
    # - unnecessary_null_aware_assignments
    - unnecessary_null_in_if_null_operators # pedantic
    # - unnecessary_nullable_for_final_variable_declarations
    # - unnecessary_overrides
    # - unnecessary_parenthesis
    # - unnecessary_raw_strings
    - unnecessary_statements # flutter
    # - unnecessary_string_escapes
    # - unnecessary_string_interpolations
    - unnecessary_this # pedantic, effective_dart
    - unrelated_type_equality_checks # flutter, pedantic
    # - unsafe_html
    # - use_full_hex_values_for_flutter_colors
    - use_function_type_syntax_for_parameters # pedantic
    # - use_is_even_rather_than_modulo
    # - use_key_in_widget_constructors
    # - use_late_for_private_fields_and_variables
    # - use_raw_strings
    - use_rethrow_when_possible # pedantic, effective_dart
    # - use_setters_to_change_properties # effective_dart
    # - use_string_buffers
    - use_to_and_as_if_applicable # effective_dart
    - valid_regexps # flutter, pedantic
    # - void_checks